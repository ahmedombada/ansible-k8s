# to do:
# 1. create ingress role
# 2. HA proxy
# 3. create cert manager role
# 4. make workers pull images from private repo (https://www.youtube.com/watch?v=r15S2tBevoE)
# 5. install cert manager (with kubectl apply)
# - hosts: all
#   tasks:
#   - apt:
#       cache_valid_time: 3600
#       update_cache: yes
#   become: yes

- name: set up the certificate authority
  hosts: localhost
  connection: local
  roles:
    - ca
  tags:
    - ca
  become: yes

- name: copy certs to master nodes
  hosts: masters
  tasks:
  - copy:
      src: /k8s/certificates/{{item}}
      dest: "{{vault_home_dir}}"
    with_items:
      - ca.pem
      - ca-key.pem
      - kube-apiserver-key.pem
      - kube-apiserver.pem 
      - service-account-key.pem
      - service-account.pem
  become: yes
  tags:
    - cpcm

- name: copy docker-registry certs to /registry/certs
  hosts: masters
  tasks:
  - copy:
      src: /k8s/certificates/{{item}}
      dest: /registry/certs/
    with_items:
      - docker-registry.pem
      - docker-registry-key.pem
  become: yes
  tags:
    - cpr

- name: copy certs to worker nodes
  hosts: workers
  tasks:
  - copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
    - { src: '/k8s/certificates/ca.pem', dest: '{{vault_home_dir}}' }
    - { src: '/k8s/certificates/{{inventory_hostname}}.pem', dest: '{{vault_home_dir}}' }
    - { src: '/k8s/certificates/{{inventory_hostname}}-key.pem', dest: '{{vault_home_dir}}' }
  become: yes
  tags:
    - cpcw

- name: generate configuration files
  hosts: localhost
  connection: local
  roles:
    - configurationfiles
  tags:
    - configurationfiles
  become: true

- name: copy configuration files to master nodes
  hosts: masters
  tasks:
  - copy:
      src: /k8s/configurationfiles/{{item}}
      dest: "{{vault_home_dir}}"
    with_items:
      - admin.kubeconfig
      - kube-controller-manager.kubeconfig
      - kube-scheduler.kubeconfig
  become: yes


- name: copy configuration files to worker nodes
  hosts: workers
  tasks:
  - copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - { src: '/k8s/configurationfiles/{{inventory_hostname}}.kubeconfig', dest: '{{vault_home_dir}}' }
      - { src: '/k8s/configurationfiles/kube-proxy.kubeconfig', dest: '{{vault_home_dir}}' }
  become: yes

- name: create encryption key
  hosts: localhost
  connection: local
  roles:
    - encryption
  tags:
    - encryption
  become: true 

- name: copy encryption key to controllers
  hosts: masters
  tasks:
  - copy:
      src: /k8s/encryption/{{item}}
      dest: "{{vault_home_dir}}"
    with_items:
      - encryption-config.yaml
  become: yes


- name: setup etcd
  hosts: masters
  become: yes
  roles:
    - etcd
  tags:
    - etcd

- name: setup the control plane
  hosts: masters
  become: yes
  roles:
    - controlplane
  tags:
    - controlplane

- name: bootstrap workers
  hosts: workers
  become: yes
  roles:
    - k8s-worker
  tags:
    - k8s-worker

- name: verify stuff
  hosts: localhost
  connection: local
  roles:
    - kubectl
  tags:
    - kubectl

- name: set up an ingress kube-dns
  hosts: localhost
  connection: local
  roles:
    - kube-dns
  tags:
    - kube-dns  

- name: set up an ingress controller
  hosts: localhost
  connection: local
  roles:
    - ingress-controller
  tags:
    - ingress-controller

- name: set up cert-manager
  hosts: localhost
  connection: local
  roles:
    - cert-manager
  tags:
    - cert-manager

- name: create service
  hosts: localhost
  connection: local
  roles:
    - create-service
  tags:
    - create-service

- name: set up haproxy
  hosts: loadbalancer
  become: yes
  roles:
    - ha-proxy
  tags:
    - ha-proxy
  
  